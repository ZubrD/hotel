{"version":3,"file":"363.js","mappings":"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","sources":["webpack://zubr-webpack/./node_modules/air-datepicker/src/js/air-datepicker.js","webpack://zubr-webpack/./node_modules/air-datepicker/src/js/body.js","webpack://zubr-webpack/./node_modules/air-datepicker/src/js/datepicker.js","webpack://zubr-webpack/./node_modules/air-datepicker/src/js/navigation.js","webpack://zubr-webpack/./node_modules/air-datepicker/src/js/timepicker.js"],"sourcesContent":["require('./datepicker');\r\nrequire('./body');\r\nrequire('./navigation');\r\nrequire('./timepicker');",";(function () {\r\n    var templates = {\r\n        days:'' +\r\n        '<div class=\"datepicker--days datepicker--body\">' +\r\n        '<div class=\"datepicker--days-names\"></div>' +\r\n        '<div class=\"datepicker--cells datepicker--cells-days\"></div>' +\r\n        '</div>',\r\n        months: '' +\r\n        '<div class=\"datepicker--months datepicker--body\">' +\r\n        '<div class=\"datepicker--cells datepicker--cells-months\"></div>' +\r\n        '</div>',\r\n        years: '' +\r\n        '<div class=\"datepicker--years datepicker--body\">' +\r\n        '<div class=\"datepicker--cells datepicker--cells-years\"></div>' +\r\n        '</div>'\r\n        },\r\n        datepicker = $.fn.datepicker,\r\n        dp = datepicker.Constructor;\r\n\r\n    datepicker.Body = function (d, type, opts) {\r\n        this.d = d;\r\n        this.type = type;\r\n        this.opts = opts;\r\n        this.$el = $('');\r\n\r\n        if (this.opts.onlyTimepicker) return;\r\n        this.init();\r\n    };\r\n\r\n    datepicker.Body.prototype = {\r\n        init: function () {\r\n            this._buildBaseHtml();\r\n            this._render();\r\n\r\n            this._bindEvents();\r\n        },\r\n\r\n        _bindEvents: function () {\r\n            this.$el.on('click', '.datepicker--cell', $.proxy(this._onClickCell, this));\r\n        },\r\n\r\n        _buildBaseHtml: function () {\r\n            this.$el = $(templates[this.type]).appendTo(this.d.$content);\r\n            this.$names = $('.datepicker--days-names', this.$el);\r\n            this.$cells = $('.datepicker--cells', this.$el);\r\n        },\r\n\r\n        _getDayNamesHtml: function (firstDay, curDay, html, i) {\r\n            curDay = curDay != undefined ? curDay : firstDay;\r\n            html = html ? html : '';\r\n            i = i != undefined ? i : 0;\r\n\r\n            if (i > 7) return html;\r\n            if (curDay == 7) return this._getDayNamesHtml(firstDay, 0, html, ++i);\r\n\r\n            html += '<div class=\"datepicker--day-name' + (this.d.isWeekend(curDay) ? \" -weekend-\" : \"\") + '\">' + this.d.loc.daysMin[curDay] + '</div>';\r\n\r\n            return this._getDayNamesHtml(firstDay, ++curDay, html, ++i);\r\n        },\r\n\r\n        _getCellContents: function (date, type) {\r\n            var classes = \"datepicker--cell datepicker--cell-\" + type,\r\n                currentDate = new Date(),\r\n                parent = this.d,\r\n                minRange = dp.resetTime(parent.minRange),\r\n                maxRange = dp.resetTime(parent.maxRange),\r\n                opts = parent.opts,\r\n                d = dp.getParsedDate(date),\r\n                render = {},\r\n                html = d.date;\r\n\r\n            switch (type) {\r\n                case 'day':\r\n                    if (parent.isWeekend(d.day)) classes += \" -weekend-\";\r\n                    if (d.month != this.d.parsedDate.month) {\r\n                        classes += \" -other-month-\";\r\n                        if (!opts.selectOtherMonths) {\r\n                            classes += \" -disabled-\";\r\n                        }\r\n                        if (!opts.showOtherMonths) html = '';\r\n                    }\r\n                    break;\r\n                case 'month':\r\n                    html = parent.loc[parent.opts.monthsField][d.month];\r\n                    break;\r\n                case 'year':\r\n                    var decade = parent.curDecade;\r\n                    html = d.year;\r\n                    if (d.year < decade[0] || d.year > decade[1]) {\r\n                        classes += ' -other-decade-';\r\n                        if (!opts.selectOtherYears) {\r\n                            classes += \" -disabled-\";\r\n                        }\r\n                        if (!opts.showOtherYears) html = '';\r\n                    }\r\n                    break;\r\n            }\r\n\r\n            if (opts.onRenderCell) {\r\n                render = opts.onRenderCell(date, type) || {};\r\n                html = render.html ? render.html : html;\r\n                classes += render.classes ? ' ' + render.classes : '';\r\n            }\r\n\r\n            if (opts.range) {\r\n                if (dp.isSame(minRange, date, type)) classes += ' -range-from-';\r\n                if (dp.isSame(maxRange, date, type)) classes += ' -range-to-';\r\n\r\n                if (parent.selectedDates.length == 1 && parent.focused) {\r\n                    if (\r\n                        (dp.bigger(minRange, date) && dp.less(parent.focused, date)) ||\r\n                        (dp.less(maxRange, date) && dp.bigger(parent.focused, date)))\r\n                    {\r\n                        classes += ' -in-range-'\r\n                    }\r\n\r\n                    if (dp.less(maxRange, date) && dp.isSame(parent.focused, date)) {\r\n                        classes += ' -range-from-'\r\n                    }\r\n                    if (dp.bigger(minRange, date) && dp.isSame(parent.focused, date)) {\r\n                        classes += ' -range-to-'\r\n                    }\r\n\r\n                } else if (parent.selectedDates.length == 2) {\r\n                    if (dp.bigger(minRange, date) && dp.less(maxRange, date)) {\r\n                        classes += ' -in-range-'\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n            if (dp.isSame(currentDate, date, type)) classes += ' -current-';\r\n            if (parent.focused && dp.isSame(date, parent.focused, type)) classes += ' -focus-';\r\n            if (parent._isSelected(date, type)) classes += ' -selected-';\r\n            if (!parent._isInRange(date, type) || render.disabled) classes += ' -disabled-';\r\n\r\n            return {\r\n                html: html,\r\n                classes: classes\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Calculates days number to render. Generates days html and returns it.\r\n         * @param {object} date - Date object\r\n         * @returns {string}\r\n         * @private\r\n         */\r\n        _getDaysHtml: function (date) {\r\n            var totalMonthDays = dp.getDaysCount(date),\r\n                firstMonthDay = new Date(date.getFullYear(), date.getMonth(), 1).getDay(),\r\n                lastMonthDay = new Date(date.getFullYear(), date.getMonth(), totalMonthDays).getDay(),\r\n                daysFromPevMonth = firstMonthDay - this.d.loc.firstDay,\r\n                daysFromNextMonth = 6 - lastMonthDay + this.d.loc.firstDay;\r\n\r\n            daysFromPevMonth = daysFromPevMonth < 0 ? daysFromPevMonth + 7 : daysFromPevMonth;\r\n            daysFromNextMonth = daysFromNextMonth > 6 ? daysFromNextMonth - 7 : daysFromNextMonth;\r\n\r\n            var startDayIndex = -daysFromPevMonth + 1,\r\n                m, y,\r\n                html = '';\r\n\r\n            for (var i = startDayIndex, max = totalMonthDays + daysFromNextMonth; i <= max; i++) {\r\n                y = date.getFullYear();\r\n                m = date.getMonth();\r\n\r\n                html += this._getDayHtml(new Date(y, m, i))\r\n            }\r\n\r\n            return html;\r\n        },\r\n\r\n        _getDayHtml: function (date) {\r\n           var content = this._getCellContents(date, 'day');\r\n\r\n            return '<div class=\"' + content.classes + '\" ' +\r\n                'data-date=\"' + date.getDate() + '\" ' +\r\n                'data-month=\"' + date.getMonth() + '\" ' +\r\n                'data-year=\"' + date.getFullYear() + '\">' + content.html + '</div>';\r\n        },\r\n\r\n        /**\r\n         * Generates months html\r\n         * @param {object} date - date instance\r\n         * @returns {string}\r\n         * @private\r\n         */\r\n        _getMonthsHtml: function (date) {\r\n            var html = '',\r\n                d = dp.getParsedDate(date),\r\n                i = 0;\r\n\r\n            while(i < 12) {\r\n                html += this._getMonthHtml(new Date(d.year, i));\r\n                i++\r\n            }\r\n\r\n            return html;\r\n        },\r\n\r\n        _getMonthHtml: function (date) {\r\n            var content = this._getCellContents(date, 'month');\r\n\r\n            return '<div class=\"' + content.classes + '\" data-month=\"' + date.getMonth() + '\">' + content.html + '</div>'\r\n        },\r\n\r\n        _getYearsHtml: function (date) {\r\n            var d = dp.getParsedDate(date),\r\n                decade = dp.getDecade(date),\r\n                firstYear = decade[0] - 1,\r\n                html = '',\r\n                i = firstYear;\r\n\r\n            for (i; i <= decade[1] + 1; i++) {\r\n                html += this._getYearHtml(new Date(i , 0));\r\n            }\r\n\r\n            return html;\r\n        },\r\n\r\n        _getYearHtml: function (date) {\r\n            var content = this._getCellContents(date, 'year');\r\n\r\n            return '<div class=\"' + content.classes + '\" data-year=\"' + date.getFullYear() + '\">' + content.html + '</div>'\r\n        },\r\n\r\n        _renderTypes: {\r\n            days: function () {\r\n                var dayNames = this._getDayNamesHtml(this.d.loc.firstDay),\r\n                    days = this._getDaysHtml(this.d.currentDate);\r\n\r\n                this.$cells.html(days);\r\n                this.$names.html(dayNames)\r\n            },\r\n            months: function () {\r\n                var html = this._getMonthsHtml(this.d.currentDate);\r\n\r\n                this.$cells.html(html)\r\n            },\r\n            years: function () {\r\n                var html = this._getYearsHtml(this.d.currentDate);\r\n\r\n                this.$cells.html(html)\r\n            }\r\n        },\r\n\r\n        _render: function () {\r\n            if (this.opts.onlyTimepicker) return;\r\n            this._renderTypes[this.type].bind(this)();\r\n        },\r\n\r\n        _update: function () {\r\n            var $cells = $('.datepicker--cell', this.$cells),\r\n                _this = this,\r\n                classes,\r\n                $cell,\r\n                date;\r\n            $cells.each(function (cell, i) {\r\n                $cell = $(this);\r\n                date = _this.d._getDateFromCell($(this));\r\n                classes = _this._getCellContents(date, _this.d.cellType);\r\n                $cell.attr('class',classes.classes)\r\n            });\r\n        },\r\n\r\n        show: function () {\r\n            if (this.opts.onlyTimepicker) return;\r\n            this.$el.addClass('active');\r\n            this.acitve = true;\r\n        },\r\n\r\n        hide: function () {\r\n            this.$el.removeClass('active');\r\n            this.active = false;\r\n        },\r\n\r\n        //  Events\r\n        // -------------------------------------------------\r\n\r\n        _handleClick: function (el) {\r\n            var date = el.data('date') || 1,\r\n                month = el.data('month') || 0,\r\n                year = el.data('year') || this.d.parsedDate.year,\r\n                dp = this.d;\r\n            // Change view if min view does not reach yet\r\n            if (dp.view != this.opts.minView) {\r\n                dp.down(new Date(year, month, date));\r\n                return;\r\n            }\r\n            // Select date if min view is reached\r\n            var selectedDate = new Date(year, month, date),\r\n                alreadySelected = this.d._isSelected(selectedDate, this.d.cellType);\r\n\r\n            if (!alreadySelected) {\r\n                dp._trigger('clickCell', selectedDate);\r\n                return;\r\n            }\r\n\r\n            dp._handleAlreadySelectedDates.bind(dp, alreadySelected, selectedDate)();\r\n\r\n        },\r\n\r\n        _onClickCell: function (e) {\r\n            var $el = $(e.target).closest('.datepicker--cell');\r\n\r\n            if ($el.hasClass('-disabled-')) return;\r\n\r\n            this._handleClick.bind(this)($el);\r\n        }\r\n    };\r\n})();\r\n",";(function () {\r\n    var VERSION = '2.2.3',\r\n        pluginName = 'datepicker',\r\n        autoInitSelector = '.datepicker-here',\r\n        $body, $datepickersContainer,\r\n        containerBuilt = false,\r\n        baseTemplate = '' +\r\n            '<div class=\"datepicker\">' +\r\n            '<i class=\"datepicker--pointer\"></i>' +\r\n            '<nav class=\"datepicker--nav\"></nav>' +\r\n            '<div class=\"datepicker--content\"></div>' +\r\n            '</div>',\r\n        defaults = {\r\n            classes: '',\r\n            inline: false,\r\n            language: 'ru',\r\n            startDate: new Date(),\r\n            firstDay: '',\r\n            weekends: [6, 0],\r\n            dateFormat: '',\r\n            altField: '',\r\n            altFieldDateFormat: '@',\r\n            toggleSelected: true,\r\n            keyboardNav: true,\r\n\r\n            position: 'bottom left',\r\n            offset: 12,\r\n\r\n            view: 'days',\r\n            minView: 'days',\r\n\r\n            showOtherMonths: true,\r\n            selectOtherMonths: true,\r\n            moveToOtherMonthsOnSelect: true,\r\n\r\n            showOtherYears: true,\r\n            selectOtherYears: true,\r\n            moveToOtherYearsOnSelect: true,\r\n\r\n            minDate: '',\r\n            maxDate: '',\r\n            disableNavWhenOutOfRange: true,\r\n\r\n            multipleDates: false, // Boolean or Number\r\n            multipleDatesSeparator: ',',\r\n            range: false,\r\n\r\n            todayButton: false,\r\n            clearButton: false,\r\n\r\n            showEvent: 'focus',\r\n            autoClose: false,\r\n\r\n            // navigation\r\n            monthsField: 'monthsShort',\r\n            prevHtml: '<svg><path d=\"M 17,12 l -5,5 l 5,5\"></path></svg>',\r\n            nextHtml: '<svg><path d=\"M 14,12 l 5,5 l -5,5\"></path></svg>',\r\n            navTitles: {\r\n                days: 'MM, <i>yyyy</i>',\r\n                months: 'yyyy',\r\n                years: 'yyyy1 - yyyy2'\r\n            },\r\n\r\n            // timepicker\r\n            timepicker: false,\r\n            onlyTimepicker: false,\r\n            dateTimeSeparator: ' ',\r\n            timeFormat: '',\r\n            minHours: 0,\r\n            maxHours: 24,\r\n            minMinutes: 0,\r\n            maxMinutes: 59,\r\n            hoursStep: 1,\r\n            minutesStep: 1,\r\n\r\n            // events\r\n            onSelect: '',\r\n            onShow: '',\r\n            onHide: '',\r\n            onChangeMonth: '',\r\n            onChangeYear: '',\r\n            onChangeDecade: '',\r\n            onChangeView: '',\r\n            onRenderCell: ''\r\n        },\r\n        hotKeys = {\r\n            'ctrlRight': [17, 39],\r\n            'ctrlUp': [17, 38],\r\n            'ctrlLeft': [17, 37],\r\n            'ctrlDown': [17, 40],\r\n            'shiftRight': [16, 39],\r\n            'shiftUp': [16, 38],\r\n            'shiftLeft': [16, 37],\r\n            'shiftDown': [16, 40],\r\n            'altUp': [18, 38],\r\n            'altRight': [18, 39],\r\n            'altLeft': [18, 37],\r\n            'altDown': [18, 40],\r\n            'ctrlShiftUp': [16, 17, 38]\r\n        },\r\n        datepicker;\r\n\r\n    var Datepicker  = function (el, options) {\r\n        this.el = el;\r\n        this.$el = $(el);\r\n\r\n        this.opts = $.extend(true, {}, defaults, options, this.$el.data());\r\n\r\n        if ($body == undefined) {\r\n            $body = $('body');\r\n        }\r\n\r\n        if (!this.opts.startDate) {\r\n            this.opts.startDate = new Date();\r\n        }\r\n\r\n        if (this.el.nodeName == 'INPUT') {\r\n            this.elIsInput = true;\r\n        }\r\n\r\n        if (this.opts.altField) {\r\n            this.$altField = typeof this.opts.altField == 'string' ? $(this.opts.altField) : this.opts.altField;\r\n        }\r\n\r\n        this.inited = false;\r\n        this.visible = false;\r\n        this.silent = false; // Need to prevent unnecessary rendering\r\n\r\n        this.currentDate = this.opts.startDate;\r\n        this.currentView = this.opts.view;\r\n        this._createShortCuts();\r\n        this.selectedDates = [];\r\n        this.views = {};\r\n        this.keys = [];\r\n        this.minRange = '';\r\n        this.maxRange = '';\r\n        this._prevOnSelectValue = '';\r\n\r\n        this.init()\r\n    };\r\n\r\n    datepicker = Datepicker;\r\n\r\n    datepicker.prototype = {\r\n        VERSION: VERSION,\r\n        viewIndexes: ['days', 'months', 'years'],\r\n\r\n        init: function () {\r\n            if (!containerBuilt && !this.opts.inline && this.elIsInput) {\r\n                this._buildDatepickersContainer();\r\n            }\r\n            this._buildBaseHtml();\r\n            this._defineLocale(this.opts.language);\r\n            this._syncWithMinMaxDates();\r\n\r\n            if (this.elIsInput) {\r\n                if (!this.opts.inline) {\r\n                    // Set extra classes for proper transitions\r\n                    this._setPositionClasses(this.opts.position);\r\n                    this._bindEvents()\r\n                }\r\n                if (this.opts.keyboardNav && !this.opts.onlyTimepicker) {\r\n                    this._bindKeyboardEvents();\r\n                }\r\n                this.$datepicker.on('mousedown', this._onMouseDownDatepicker.bind(this));\r\n                this.$datepicker.on('mouseup', this._onMouseUpDatepicker.bind(this));\r\n            }\r\n\r\n            if (this.opts.classes) {\r\n                this.$datepicker.addClass(this.opts.classes)\r\n            }\r\n\r\n            if (this.opts.timepicker) {\r\n                this.timepicker = new $.fn.datepicker.Timepicker(this, this.opts);\r\n                this._bindTimepickerEvents();\r\n            }\r\n\r\n            if (this.opts.onlyTimepicker) {\r\n                this.$datepicker.addClass('-only-timepicker-');\r\n            }\r\n\r\n            this.views[this.currentView] = new $.fn.datepicker.Body(this, this.currentView, this.opts);\r\n            this.views[this.currentView].show();\r\n            this.nav = new $.fn.datepicker.Navigation(this, this.opts);\r\n            this.view = this.currentView;\r\n\r\n            this.$el.on('clickCell.adp', this._onClickCell.bind(this));\r\n            this.$datepicker.on('mouseenter', '.datepicker--cell', this._onMouseEnterCell.bind(this));\r\n            this.$datepicker.on('mouseleave', '.datepicker--cell', this._onMouseLeaveCell.bind(this));\r\n\r\n            this.inited = true;\r\n        },\r\n\r\n        _createShortCuts: function () {\r\n            this.minDate = this.opts.minDate ? this.opts.minDate : new Date(-8639999913600000);\r\n            this.maxDate = this.opts.maxDate ? this.opts.maxDate : new Date(8639999913600000);\r\n        },\r\n\r\n        _bindEvents : function () {\r\n            this.$el.on(this.opts.showEvent + '.adp', this._onShowEvent.bind(this));\r\n            this.$el.on('mouseup.adp', this._onMouseUpEl.bind(this));\r\n            this.$el.on('blur.adp', this._onBlur.bind(this));\r\n            this.$el.on('keyup.adp', this._onKeyUpGeneral.bind(this));\r\n            $(window).on('resize.adp', this._onResize.bind(this));\r\n            $('body').on('mouseup.adp', this._onMouseUpBody.bind(this));\r\n        },\r\n\r\n        _bindKeyboardEvents: function () {\r\n            this.$el.on('keydown.adp', this._onKeyDown.bind(this));\r\n            this.$el.on('keyup.adp', this._onKeyUp.bind(this));\r\n            this.$el.on('hotKey.adp', this._onHotKey.bind(this));\r\n        },\r\n\r\n        _bindTimepickerEvents: function () {\r\n            this.$el.on('timeChange.adp', this._onTimeChange.bind(this));\r\n        },\r\n\r\n        isWeekend: function (day) {\r\n            return this.opts.weekends.indexOf(day) !== -1;\r\n        },\r\n\r\n        _defineLocale: function (lang) {\r\n            if (typeof lang == 'string') {\r\n                this.loc = $.fn.datepicker.language[lang];\r\n                if (!this.loc) {\r\n                    console.warn('Can\\'t find language \"' + lang + '\" in Datepicker.language, will use \"ru\" instead');\r\n                    this.loc = $.extend(true, {}, $.fn.datepicker.language.ru)\r\n                }\r\n\r\n                this.loc = $.extend(true, {}, $.fn.datepicker.language.ru, $.fn.datepicker.language[lang])\r\n            } else {\r\n                this.loc = $.extend(true, {}, $.fn.datepicker.language.ru, lang)\r\n            }\r\n\r\n            if (this.opts.dateFormat) {\r\n                this.loc.dateFormat = this.opts.dateFormat\r\n            }\r\n\r\n            if (this.opts.timeFormat) {\r\n                this.loc.timeFormat = this.opts.timeFormat\r\n            }\r\n\r\n            if (this.opts.firstDay !== '') {\r\n                this.loc.firstDay = this.opts.firstDay\r\n            }\r\n\r\n            if (this.opts.timepicker) {\r\n                this.loc.dateFormat = [this.loc.dateFormat, this.loc.timeFormat].join(this.opts.dateTimeSeparator);\r\n            }\r\n\r\n            if (this.opts.onlyTimepicker) {\r\n                this.loc.dateFormat = this.loc.timeFormat;\r\n            }\r\n\r\n            var boundary = this._getWordBoundaryRegExp;\r\n            if (this.loc.timeFormat.match(boundary('aa')) ||\r\n                this.loc.timeFormat.match(boundary('AA'))\r\n            ) {\r\n               this.ampm = true;\r\n            }\r\n        },\r\n\r\n        _buildDatepickersContainer: function () {\r\n            containerBuilt = true;\r\n            $body.append('<div class=\"datepickers-container\" id=\"datepickers-container\"></div>');\r\n            $datepickersContainer = $('#datepickers-container');\r\n        },\r\n\r\n        _buildBaseHtml: function () {\r\n            var $appendTarget,\r\n                $inline = $('<div class=\"datepicker-inline\">');\r\n\r\n            if(this.el.nodeName == 'INPUT') {\r\n                if (!this.opts.inline) {\r\n                    $appendTarget = $datepickersContainer;\r\n                } else {\r\n                    $appendTarget = $inline.insertAfter(this.$el)\r\n                }\r\n            } else {\r\n                $appendTarget = $inline.appendTo(this.$el)\r\n            }\r\n\r\n            this.$datepicker = $(baseTemplate).appendTo($appendTarget);\r\n            this.$content = $('.datepicker--content', this.$datepicker);\r\n            this.$nav = $('.datepicker--nav', this.$datepicker);\r\n        },\r\n\r\n        _triggerOnChange: function () {\r\n            if (!this.selectedDates.length) {\r\n                // Prevent from triggering multiple onSelect callback with same argument (empty string) in IE10-11\r\n                if (this._prevOnSelectValue === '') return;\r\n                this._prevOnSelectValue = '';\r\n                return this.opts.onSelect('', '', this);\r\n            }\r\n\r\n            var selectedDates = this.selectedDates,\r\n                parsedSelected = datepicker.getParsedDate(selectedDates[0]),\r\n                formattedDates,\r\n                _this = this,\r\n                dates = new Date(\r\n                    parsedSelected.year,\r\n                    parsedSelected.month,\r\n                    parsedSelected.date,\r\n                    parsedSelected.hours,\r\n                    parsedSelected.minutes\r\n                );\r\n\r\n                formattedDates = selectedDates.map(function (date) {\r\n                    return _this.formatDate(_this.loc.dateFormat, date)\r\n                }).join(this.opts.multipleDatesSeparator);\r\n\r\n            // Create new dates array, to separate it from original selectedDates\r\n            if (this.opts.multipleDates || this.opts.range) {\r\n                dates = selectedDates.map(function(date) {\r\n                    var parsedDate = datepicker.getParsedDate(date);\r\n                    return new Date(\r\n                        parsedDate.year,\r\n                        parsedDate.month,\r\n                        parsedDate.date,\r\n                        parsedDate.hours,\r\n                        parsedDate.minutes\r\n                    );\r\n                })\r\n            }\r\n\r\n            this._prevOnSelectValue = formattedDates;\r\n            this.opts.onSelect(formattedDates, dates, this);\r\n        },\r\n\r\n        next: function () {\r\n            var d = this.parsedDate,\r\n                o = this.opts;\r\n            switch (this.view) {\r\n                case 'days':\r\n                    this.date = new Date(d.year, d.month + 1, 1);\r\n                    if (o.onChangeMonth) o.onChangeMonth(this.parsedDate.month, this.parsedDate.year);\r\n                    break;\r\n                case 'months':\r\n                    this.date = new Date(d.year + 1, d.month, 1);\r\n                    if (o.onChangeYear) o.onChangeYear(this.parsedDate.year);\r\n                    break;\r\n                case 'years':\r\n                    this.date = new Date(d.year + 10, 0, 1);\r\n                    if (o.onChangeDecade) o.onChangeDecade(this.curDecade);\r\n                    break;\r\n            }\r\n        },\r\n\r\n        prev: function () {\r\n            var d = this.parsedDate,\r\n                o = this.opts;\r\n            switch (this.view) {\r\n                case 'days':\r\n                    this.date = new Date(d.year, d.month - 1, 1);\r\n                    if (o.onChangeMonth) o.onChangeMonth(this.parsedDate.month, this.parsedDate.year);\r\n                    break;\r\n                case 'months':\r\n                    this.date = new Date(d.year - 1, d.month, 1);\r\n                    if (o.onChangeYear) o.onChangeYear(this.parsedDate.year);\r\n                    break;\r\n                case 'years':\r\n                    this.date = new Date(d.year - 10, 0, 1);\r\n                    if (o.onChangeDecade) o.onChangeDecade(this.curDecade);\r\n                    break;\r\n            }\r\n        },\r\n\r\n        formatDate: function (string, date) {\r\n            date = date || this.date;\r\n            var result = string,\r\n                boundary = this._getWordBoundaryRegExp,\r\n                locale = this.loc,\r\n                leadingZero = datepicker.getLeadingZeroNum,\r\n                decade = datepicker.getDecade(date),\r\n                d = datepicker.getParsedDate(date),\r\n                fullHours = d.fullHours,\r\n                hours = d.hours,\r\n                ampm = string.match(boundary('aa')) || string.match(boundary('AA')),\r\n                dayPeriod = 'am',\r\n                replacer = this._replacer,\r\n                validHours;\r\n\r\n            if (this.opts.timepicker && this.timepicker && ampm) {\r\n                validHours = this.timepicker._getValidHoursFromDate(date, ampm);\r\n                fullHours = leadingZero(validHours.hours);\r\n                hours = validHours.hours;\r\n                dayPeriod = validHours.dayPeriod;\r\n            }\r\n\r\n            switch (true) {\r\n                case /@/.test(result):\r\n                    result = result.replace(/@/, date.getTime());\r\n                case /aa/.test(result):\r\n                    result = replacer(result, boundary('aa'), dayPeriod);\r\n                case /AA/.test(result):\r\n                    result = replacer(result, boundary('AA'), dayPeriod.toUpperCase());\r\n                case /dd/.test(result):\r\n                    result = replacer(result, boundary('dd'), d.fullDate);\r\n                case /d/.test(result):\r\n                    result = replacer(result, boundary('d'), d.date);\r\n                case /DD/.test(result):\r\n                    result = replacer(result, boundary('DD'), locale.days[d.day]);\r\n                case /D/.test(result):\r\n                    result = replacer(result, boundary('D'), locale.daysShort[d.day]);\r\n                case /mm/.test(result):\r\n                    result = replacer(result, boundary('mm'), d.fullMonth);\r\n                case /m/.test(result):\r\n                    result = replacer(result, boundary('m'), d.month + 1);\r\n                case /MM/.test(result):\r\n                    result = replacer(result, boundary('MM'), this.loc.months[d.month]);\r\n                case /M/.test(result):\r\n                    result = replacer(result, boundary('M'), locale.monthsShort[d.month]);\r\n                case /ii/.test(result):\r\n                    result = replacer(result, boundary('ii'), d.fullMinutes);\r\n                case /i/.test(result):\r\n                    result = replacer(result, boundary('i'), d.minutes);\r\n                case /hh/.test(result):\r\n                    result = replacer(result, boundary('hh'), fullHours);\r\n                case /h/.test(result):\r\n                    result = replacer(result, boundary('h'), hours);\r\n                case /yyyy/.test(result):\r\n                    result = replacer(result, boundary('yyyy'), d.year);\r\n                case /yyyy1/.test(result):\r\n                    result = replacer(result, boundary('yyyy1'), decade[0]);\r\n                case /yyyy2/.test(result):\r\n                    result = replacer(result, boundary('yyyy2'), decade[1]);\r\n                case /yy/.test(result):\r\n                    result = replacer(result, boundary('yy'), d.year.toString().slice(-2));\r\n            }\r\n\r\n            return result;\r\n        },\r\n\r\n        _replacer: function (str, reg, data) {\r\n            return str.replace(reg, function (match, p1,p2,p3) {\r\n                return p1 + data + p3;\r\n            })\r\n        },\r\n\r\n        _getWordBoundaryRegExp: function (sign) {\r\n            var symbols = '\\\\s|\\\\.|-|/|\\\\\\\\|,|\\\\$|\\\\!|\\\\?|:|;';\r\n\r\n            return new RegExp('(^|>|' + symbols + ')(' + sign + ')($|<|' + symbols + ')', 'g');\r\n        },\r\n\r\n\r\n        selectDate: function (date) {\r\n            var _this = this,\r\n                opts = _this.opts,\r\n                d = _this.parsedDate,\r\n                selectedDates = _this.selectedDates,\r\n                len = selectedDates.length,\r\n                newDate = '';\r\n\r\n            if (Array.isArray(date)) {\r\n                date.forEach(function (d) {\r\n                    _this.selectDate(d)\r\n                });\r\n                return;\r\n            }\r\n\r\n            if (!(date instanceof Date)) return;\r\n\r\n            this.lastSelectedDate = date;\r\n\r\n            // Set new time values from Date\r\n            if (this.timepicker) {\r\n                this.timepicker._setTime(date);\r\n            }\r\n\r\n            // On this step timepicker will set valid values in it's instance\r\n            _this._trigger('selectDate', date);\r\n\r\n            // Set correct time values after timepicker's validation\r\n            // Prevent from setting hours or minutes which values are lesser then `min` value or\r\n            // greater then `max` value\r\n            if (this.timepicker) {\r\n                date.setHours(this.timepicker.hours);\r\n                date.setMinutes(this.timepicker.minutes)\r\n            }\r\n\r\n            if (_this.view == 'days') {\r\n                if (date.getMonth() != d.month && opts.moveToOtherMonthsOnSelect) {\r\n                    newDate = new Date(date.getFullYear(), date.getMonth(), 1);\r\n                }\r\n            }\r\n\r\n            if (_this.view == 'years') {\r\n                if (date.getFullYear() != d.year && opts.moveToOtherYearsOnSelect) {\r\n                    newDate = new Date(date.getFullYear(), 0, 1);\r\n                }\r\n            }\r\n\r\n            if (newDate) {\r\n                _this.silent = true;\r\n                _this.date = newDate;\r\n                _this.silent = false;\r\n                _this.nav._render()\r\n            }\r\n\r\n            if (opts.multipleDates && !opts.range) { // Set priority to range functionality\r\n                if (len === opts.multipleDates) return;\r\n                if (!_this._isSelected(date)) {\r\n                    _this.selectedDates.push(date);\r\n                }\r\n            } else if (opts.range) {\r\n                if (len == 2) {\r\n                    _this.selectedDates = [date];\r\n                    _this.minRange = date;\r\n                    _this.maxRange = '';\r\n                } else if (len == 1) {\r\n                    _this.selectedDates.push(date);\r\n                    if (!_this.maxRange){\r\n                        _this.maxRange = date;\r\n                    } else {\r\n                        _this.minRange = date;\r\n                    }\r\n                    // Swap dates if they were selected via dp.selectDate() and second date was smaller then first\r\n                    if (datepicker.bigger(_this.maxRange, _this.minRange)) {\r\n                        _this.maxRange = _this.minRange;\r\n                        _this.minRange = date;\r\n                    }\r\n                    _this.selectedDates = [_this.minRange, _this.maxRange]\r\n\r\n                } else {\r\n                    _this.selectedDates = [date];\r\n                    _this.minRange = date;\r\n                }\r\n            } else {\r\n                _this.selectedDates = [date];\r\n            }\r\n\r\n            _this._setInputValue();\r\n\r\n            if (opts.onSelect) {\r\n                _this._triggerOnChange();\r\n            }\r\n\r\n            if (opts.autoClose && !this.timepickerIsActive) {\r\n                if (!opts.multipleDates && !opts.range) {\r\n                    _this.hide();\r\n                } else if (opts.range && _this.selectedDates.length == 2) {\r\n                    _this.hide();\r\n                }\r\n            }\r\n\r\n            _this.views[this.currentView]._render()\r\n        },\r\n\r\n        removeDate: function (date) {\r\n            var selected = this.selectedDates,\r\n                _this = this;\r\n\r\n            if (!(date instanceof Date)) return;\r\n\r\n            return selected.some(function (curDate, i) {\r\n                if (datepicker.isSame(curDate, date)) {\r\n                    selected.splice(i, 1);\r\n\r\n                    if (!_this.selectedDates.length) {\r\n                        _this.minRange = '';\r\n                        _this.maxRange = '';\r\n                        _this.lastSelectedDate = '';\r\n                    } else {\r\n                        _this.lastSelectedDate = _this.selectedDates[_this.selectedDates.length - 1];\r\n                    }\r\n\r\n                    _this.views[_this.currentView]._render();\r\n                    _this._setInputValue();\r\n\r\n                    if (_this.opts.onSelect) {\r\n                        _this._triggerOnChange();\r\n                    }\r\n\r\n                    return true\r\n                }\r\n            })\r\n        },\r\n\r\n        today: function () {\r\n            this.silent = true;\r\n            this.view = this.opts.minView;\r\n            this.silent = false;\r\n            this.date = new Date();\r\n\r\n            if (this.opts.todayButton instanceof Date) {\r\n                this.selectDate(this.opts.todayButton)\r\n            }\r\n        },\r\n\r\n        clear: function () {\r\n            this.selectedDates = [];\r\n            this.minRange = '';\r\n            this.maxRange = '';\r\n            this.views[this.currentView]._render();\r\n            this._setInputValue();\r\n            if (this.opts.onSelect) {\r\n                this._triggerOnChange()\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Updates datepicker options\r\n         * @param {String|Object} param - parameter's name to update. If object then it will extend current options\r\n         * @param {String|Number|Object} [value] - new param value\r\n         */\r\n        update: function (param, value) {\r\n            var len = arguments.length,\r\n                lastSelectedDate = this.lastSelectedDate;\r\n\r\n            if (len == 2) {\r\n                this.opts[param] = value;\r\n            } else if (len == 1 && typeof param == 'object') {\r\n                this.opts = $.extend(true, this.opts, param)\r\n            }\r\n\r\n            this._createShortCuts();\r\n            this._syncWithMinMaxDates();\r\n            this._defineLocale(this.opts.language);\r\n            this.nav._addButtonsIfNeed();\r\n            if (!this.opts.onlyTimepicker) this.nav._render();\r\n            this.views[this.currentView]._render();\r\n\r\n            if (this.elIsInput && !this.opts.inline) {\r\n                this._setPositionClasses(this.opts.position);\r\n                if (this.visible) {\r\n                    this.setPosition(this.opts.position)\r\n                }\r\n            }\r\n\r\n            if (this.opts.classes) {\r\n                this.$datepicker.addClass(this.opts.classes)\r\n            }\r\n\r\n            if (this.opts.onlyTimepicker) {\r\n                this.$datepicker.addClass('-only-timepicker-');\r\n            }\r\n\r\n            if (this.opts.timepicker) {\r\n                if (lastSelectedDate) this.timepicker._handleDate(lastSelectedDate);\r\n                this.timepicker._updateRanges();\r\n                this.timepicker._updateCurrentTime();\r\n                // Change hours and minutes if it's values have been changed through min/max hours/minutes\r\n                if (lastSelectedDate) {\r\n                    lastSelectedDate.setHours(this.timepicker.hours);\r\n                    lastSelectedDate.setMinutes(this.timepicker.minutes);\r\n                }\r\n            }\r\n\r\n            this._setInputValue();\r\n\r\n            return this;\r\n        },\r\n\r\n        _syncWithMinMaxDates: function () {\r\n            var curTime = this.date.getTime();\r\n            this.silent = true;\r\n            if (this.minTime > curTime) {\r\n                this.date = this.minDate;\r\n            }\r\n\r\n            if (this.maxTime < curTime) {\r\n                this.date = this.maxDate;\r\n            }\r\n            this.silent = false;\r\n        },\r\n\r\n        _isSelected: function (checkDate, cellType) {\r\n            var res = false;\r\n            this.selectedDates.some(function (date) {\r\n                if (datepicker.isSame(date, checkDate, cellType)) {\r\n                    res = date;\r\n                    return true;\r\n                }\r\n            });\r\n            return res;\r\n        },\r\n\r\n        _setInputValue: function () {\r\n            var _this = this,\r\n                opts = _this.opts,\r\n                format = _this.loc.dateFormat,\r\n                altFormat = opts.altFieldDateFormat,\r\n                value = _this.selectedDates.map(function (date) {\r\n                    return _this.formatDate(format, date)\r\n                }),\r\n                altValues;\r\n\r\n            if (opts.altField && _this.$altField.length) {\r\n                altValues = this.selectedDates.map(function (date) {\r\n                    return _this.formatDate(altFormat, date)\r\n                });\r\n                altValues = altValues.join(this.opts.multipleDatesSeparator);\r\n                this.$altField.val(altValues);\r\n            }\r\n\r\n            value = value.join(this.opts.multipleDatesSeparator);\r\n\r\n            this.$el.val(value)\r\n        },\r\n\r\n        /**\r\n         * Check if date is between minDate and maxDate\r\n         * @param date {object} - date object\r\n         * @param type {string} - cell type\r\n         * @returns {boolean}\r\n         * @private\r\n         */\r\n        _isInRange: function (date, type) {\r\n            var time = date.getTime(),\r\n                d = datepicker.getParsedDate(date),\r\n                min = datepicker.getParsedDate(this.minDate),\r\n                max = datepicker.getParsedDate(this.maxDate),\r\n                dMinTime = new Date(d.year, d.month, min.date).getTime(),\r\n                dMaxTime = new Date(d.year, d.month, max.date).getTime(),\r\n                types = {\r\n                    day: time >= this.minTime && time <= this.maxTime,\r\n                    month: dMinTime >= this.minTime && dMaxTime <= this.maxTime,\r\n                    year: d.year >= min.year && d.year <= max.year\r\n                };\r\n            return type ? types[type] : types.day\r\n        },\r\n\r\n        _getDimensions: function ($el) {\r\n            var offset = $el.offset();\r\n\r\n            return {\r\n                width: $el.outerWidth(),\r\n                height: $el.outerHeight(),\r\n                left: offset.left,\r\n                top: offset.top\r\n            }\r\n        },\r\n\r\n        _getDateFromCell: function (cell) {\r\n            var curDate = this.parsedDate,\r\n                year = cell.data('year') || curDate.year,\r\n                month = cell.data('month') == undefined ? curDate.month : cell.data('month'),\r\n                date = cell.data('date') || 1;\r\n\r\n            return new Date(year, month, date);\r\n        },\r\n\r\n        _setPositionClasses: function (pos) {\r\n            pos = pos.split(' ');\r\n            var main = pos[0],\r\n                sec = pos[1],\r\n                classes = 'datepicker -' + main + '-' + sec + '- -from-' + main + '-';\r\n\r\n            if (this.visible) classes += ' active';\r\n\r\n            this.$datepicker\r\n                .removeAttr('class')\r\n                .addClass(classes);\r\n        },\r\n\r\n        setPosition: function (position) {\r\n            position = position || this.opts.position;\r\n\r\n            var dims = this._getDimensions(this.$el),\r\n                selfDims = this._getDimensions(this.$datepicker),\r\n                pos = position.split(' '),\r\n                top, left,\r\n                offset = this.opts.offset,\r\n                main = pos[0],\r\n                secondary = pos[1];\r\n\r\n            switch (main) {\r\n                case 'top':\r\n                    top = dims.top - selfDims.height - offset;\r\n                    break;\r\n                case 'right':\r\n                    left = dims.left + dims.width + offset;\r\n                    break;\r\n                case 'bottom':\r\n                    top = dims.top + dims.height + offset;\r\n                    break;\r\n                case 'left':\r\n                    left = dims.left - selfDims.width - offset;\r\n                    break;\r\n            }\r\n\r\n            switch(secondary) {\r\n                case 'top':\r\n                    top = dims.top;\r\n                    break;\r\n                case 'right':\r\n                    left = dims.left + dims.width - selfDims.width;\r\n                    break;\r\n                case 'bottom':\r\n                    top = dims.top + dims.height - selfDims.height;\r\n                    break;\r\n                case 'left':\r\n                    left = dims.left;\r\n                    break;\r\n                case 'center':\r\n                    if (/left|right/.test(main)) {\r\n                        top = dims.top + dims.height/2 - selfDims.height/2;\r\n                    } else {\r\n                        left = dims.left + dims.width/2 - selfDims.width/2;\r\n                    }\r\n            }\r\n\r\n            this.$datepicker\r\n                .css({\r\n                    left: left,\r\n                    top: top\r\n                })\r\n        },\r\n\r\n        show: function () {\r\n            var onShow = this.opts.onShow;\r\n\r\n            this.setPosition(this.opts.position);\r\n            this.$datepicker.addClass('active');\r\n            this.visible = true;\r\n\r\n            if (onShow) {\r\n                this._bindVisionEvents(onShow)\r\n            }\r\n        },\r\n\r\n        hide: function () {\r\n            var onHide = this.opts.onHide;\r\n\r\n            this.$datepicker\r\n                .removeClass('active')\r\n                .css({\r\n                    left: '-100000px'\r\n                });\r\n\r\n            this.focused = '';\r\n            this.keys = [];\r\n\r\n            this.inFocus = false;\r\n            this.visible = false;\r\n            this.$el.blur();\r\n\r\n            if (onHide) {\r\n                this._bindVisionEvents(onHide)\r\n            }\r\n        },\r\n\r\n        down: function (date) {\r\n            this._changeView(date, 'down');\r\n        },\r\n\r\n        up: function (date) {\r\n            this._changeView(date, 'up');\r\n        },\r\n\r\n        _bindVisionEvents: function (event) {\r\n            this.$datepicker.off('transitionend.dp');\r\n            event(this, false);\r\n            this.$datepicker.one('transitionend.dp', event.bind(this, this, true))\r\n        },\r\n\r\n        _changeView: function (date, dir) {\r\n            date = date || this.focused || this.date;\r\n\r\n            var nextView = dir == 'up' ? this.viewIndex + 1 : this.viewIndex - 1;\r\n            if (nextView > 2) nextView = 2;\r\n            if (nextView < 0) nextView = 0;\r\n\r\n            this.silent = true;\r\n            this.date = new Date(date.getFullYear(), date.getMonth(), 1);\r\n            this.silent = false;\r\n            this.view = this.viewIndexes[nextView];\r\n\r\n        },\r\n\r\n        _handleHotKey: function (key) {\r\n            var date = datepicker.getParsedDate(this._getFocusedDate()),\r\n                focusedParsed,\r\n                o = this.opts,\r\n                newDate,\r\n                totalDaysInNextMonth,\r\n                monthChanged = false,\r\n                yearChanged = false,\r\n                decadeChanged = false,\r\n                y = date.year,\r\n                m = date.month,\r\n                d = date.date;\r\n\r\n            switch (key) {\r\n                case 'ctrlRight':\r\n                case 'ctrlUp':\r\n                    m += 1;\r\n                    monthChanged = true;\r\n                    break;\r\n                case 'ctrlLeft':\r\n                case 'ctrlDown':\r\n                    m -= 1;\r\n                    monthChanged = true;\r\n                    break;\r\n                case 'shiftRight':\r\n                case 'shiftUp':\r\n                    yearChanged = true;\r\n                    y += 1;\r\n                    break;\r\n                case 'shiftLeft':\r\n                case 'shiftDown':\r\n                    yearChanged = true;\r\n                    y -= 1;\r\n                    break;\r\n                case 'altRight':\r\n                case 'altUp':\r\n                    decadeChanged = true;\r\n                    y += 10;\r\n                    break;\r\n                case 'altLeft':\r\n                case 'altDown':\r\n                    decadeChanged = true;\r\n                    y -= 10;\r\n                    break;\r\n                case 'ctrlShiftUp':\r\n                    this.up();\r\n                    break;\r\n            }\r\n\r\n            totalDaysInNextMonth = datepicker.getDaysCount(new Date(y,m));\r\n            newDate = new Date(y,m,d);\r\n\r\n            // If next month has less days than current, set date to total days in that month\r\n            if (totalDaysInNextMonth < d) d = totalDaysInNextMonth;\r\n\r\n            // Check if newDate is in valid range\r\n            if (newDate.getTime() < this.minTime) {\r\n                newDate = this.minDate;\r\n            } else if (newDate.getTime() > this.maxTime) {\r\n                newDate = this.maxDate;\r\n            }\r\n\r\n            this.focused = newDate;\r\n\r\n            focusedParsed = datepicker.getParsedDate(newDate);\r\n            if (monthChanged && o.onChangeMonth) {\r\n                o.onChangeMonth(focusedParsed.month, focusedParsed.year)\r\n            }\r\n            if (yearChanged && o.onChangeYear) {\r\n                o.onChangeYear(focusedParsed.year)\r\n            }\r\n            if (decadeChanged && o.onChangeDecade) {\r\n                o.onChangeDecade(this.curDecade)\r\n            }\r\n        },\r\n\r\n        _registerKey: function (key) {\r\n            var exists = this.keys.some(function (curKey) {\r\n                return curKey == key;\r\n            });\r\n\r\n            if (!exists) {\r\n                this.keys.push(key)\r\n            }\r\n        },\r\n\r\n        _unRegisterKey: function (key) {\r\n            var index = this.keys.indexOf(key);\r\n\r\n            this.keys.splice(index, 1);\r\n        },\r\n\r\n        _isHotKeyPressed: function () {\r\n            var currentHotKey,\r\n                found = false,\r\n                _this = this,\r\n                pressedKeys = this.keys.sort();\r\n\r\n            for (var hotKey in hotKeys) {\r\n                currentHotKey = hotKeys[hotKey];\r\n                if (pressedKeys.length != currentHotKey.length) continue;\r\n\r\n                if (currentHotKey.every(function (key, i) { return key == pressedKeys[i]})) {\r\n                    _this._trigger('hotKey', hotKey);\r\n                    found = true;\r\n                }\r\n            }\r\n\r\n            return found;\r\n        },\r\n\r\n        _trigger: function (event, args) {\r\n            this.$el.trigger(event, args)\r\n        },\r\n\r\n        _focusNextCell: function (keyCode, type) {\r\n            type = type || this.cellType;\r\n\r\n            var date = datepicker.getParsedDate(this._getFocusedDate()),\r\n                y = date.year,\r\n                m = date.month,\r\n                d = date.date;\r\n\r\n            if (this._isHotKeyPressed()){\r\n                return;\r\n            }\r\n\r\n            switch(keyCode) {\r\n                case 37: // left\r\n                    type == 'day' ? (d -= 1) : '';\r\n                    type == 'month' ? (m -= 1) : '';\r\n                    type == 'year' ? (y -= 1) : '';\r\n                    break;\r\n                case 38: // up\r\n                    type == 'day' ? (d -= 7) : '';\r\n                    type == 'month' ? (m -= 3) : '';\r\n                    type == 'year' ? (y -= 4) : '';\r\n                    break;\r\n                case 39: // right\r\n                    type == 'day' ? (d += 1) : '';\r\n                    type == 'month' ? (m += 1) : '';\r\n                    type == 'year' ? (y += 1) : '';\r\n                    break;\r\n                case 40: // down\r\n                    type == 'day' ? (d += 7) : '';\r\n                    type == 'month' ? (m += 3) : '';\r\n                    type == 'year' ? (y += 4) : '';\r\n                    break;\r\n            }\r\n\r\n            var nd = new Date(y,m,d);\r\n            if (nd.getTime() < this.minTime) {\r\n                nd = this.minDate;\r\n            } else if (nd.getTime() > this.maxTime) {\r\n                nd = this.maxDate;\r\n            }\r\n\r\n            this.focused = nd;\r\n\r\n        },\r\n\r\n        _getFocusedDate: function () {\r\n            var focused  = this.focused || this.selectedDates[this.selectedDates.length - 1],\r\n                d = this.parsedDate;\r\n\r\n            if (!focused) {\r\n                switch (this.view) {\r\n                    case 'days':\r\n                        focused = new Date(d.year, d.month, new Date().getDate());\r\n                        break;\r\n                    case 'months':\r\n                        focused = new Date(d.year, d.month, 1);\r\n                        break;\r\n                    case 'years':\r\n                        focused = new Date(d.year, 0, 1);\r\n                        break;\r\n                }\r\n            }\r\n\r\n            return focused;\r\n        },\r\n\r\n        _getCell: function (date, type) {\r\n            type = type || this.cellType;\r\n\r\n            var d = datepicker.getParsedDate(date),\r\n                selector = '.datepicker--cell[data-year=\"' + d.year + '\"]',\r\n                $cell;\r\n\r\n            switch (type) {\r\n                case 'month':\r\n                    selector = '[data-month=\"' + d.month + '\"]';\r\n                    break;\r\n                case 'day':\r\n                    selector += '[data-month=\"' + d.month + '\"][data-date=\"' + d.date + '\"]';\r\n                    break;\r\n            }\r\n            $cell = this.views[this.currentView].$el.find(selector);\r\n\r\n            return $cell.length ? $cell : $('');\r\n        },\r\n\r\n        destroy: function () {\r\n            var _this = this;\r\n            _this.$el\r\n                .off('.adp')\r\n                .data('datepicker', '');\r\n\r\n            _this.selectedDates = [];\r\n            _this.focused = '';\r\n            _this.views = {};\r\n            _this.keys = [];\r\n            _this.minRange = '';\r\n            _this.maxRange = '';\r\n\r\n            if (_this.opts.inline || !_this.elIsInput) {\r\n                _this.$datepicker.closest('.datepicker-inline').remove();\r\n            } else {\r\n                _this.$datepicker.remove();\r\n            }\r\n        },\r\n\r\n        _handleAlreadySelectedDates: function (alreadySelected, selectedDate) {\r\n            if (this.opts.range) {\r\n                if (!this.opts.toggleSelected) {\r\n                    // Add possibility to select same date when range is true\r\n                    if (this.selectedDates.length != 2) {\r\n                        this._trigger('clickCell', selectedDate);\r\n                    }\r\n                } else {\r\n                    this.removeDate(selectedDate);\r\n                }\r\n            } else if (this.opts.toggleSelected){\r\n                this.removeDate(selectedDate);\r\n            }\r\n\r\n            // Change last selected date to be able to change time when clicking on this cell\r\n            if (!this.opts.toggleSelected) {\r\n                this.lastSelectedDate = alreadySelected;\r\n                if (this.opts.timepicker) {\r\n                    this.timepicker._setTime(alreadySelected);\r\n                    this.timepicker.update();\r\n                }\r\n            }\r\n        },\r\n\r\n        _onShowEvent: function (e) {\r\n            if (!this.visible) {\r\n                this.show();\r\n            }\r\n        },\r\n\r\n        _onBlur: function () {\r\n            if (!this.inFocus && this.visible) {\r\n                this.hide();\r\n            }\r\n        },\r\n\r\n        _onMouseDownDatepicker: function (e) {\r\n            this.inFocus = true;\r\n        },\r\n\r\n        _onMouseUpDatepicker: function (e) {\r\n            this.inFocus = false;\r\n            e.originalEvent.inFocus = true;\r\n            if (!e.originalEvent.timepickerFocus) this.$el.focus();\r\n        },\r\n\r\n        _onKeyUpGeneral: function (e) {\r\n            var val = this.$el.val();\r\n\r\n            if (!val) {\r\n                this.clear();\r\n            }\r\n        },\r\n\r\n        _onResize: function () {\r\n            if (this.visible) {\r\n                this.setPosition();\r\n            }\r\n        },\r\n\r\n        _onMouseUpBody: function (e) {\r\n            if (e.originalEvent.inFocus) return;\r\n\r\n            if (this.visible && !this.inFocus) {\r\n                this.hide();\r\n            }\r\n        },\r\n\r\n        _onMouseUpEl: function (e) {\r\n            e.originalEvent.inFocus = true;\r\n            setTimeout(this._onKeyUpGeneral.bind(this),4);\r\n        },\r\n\r\n        _onKeyDown: function (e) {\r\n            var code = e.which;\r\n            this._registerKey(code);\r\n\r\n            // Arrows\r\n            if (code >= 37 && code <= 40) {\r\n                e.preventDefault();\r\n                this._focusNextCell(code);\r\n            }\r\n\r\n            // Enter\r\n            if (code == 13) {\r\n                if (this.focused) {\r\n                    if (this._getCell(this.focused).hasClass('-disabled-')) return;\r\n                    if (this.view != this.opts.minView) {\r\n                        this.down()\r\n                    } else {\r\n                        var alreadySelected = this._isSelected(this.focused, this.cellType);\r\n\r\n                        if (!alreadySelected) {\r\n                            if (this.timepicker) {\r\n                                this.focused.setHours(this.timepicker.hours);\r\n                                this.focused.setMinutes(this.timepicker.minutes);\r\n                            }\r\n                            this.selectDate(this.focused);\r\n                            return;\r\n                        }\r\n                        this._handleAlreadySelectedDates(alreadySelected, this.focused)\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Esc\r\n            if (code == 27) {\r\n                this.hide();\r\n            }\r\n        },\r\n\r\n        _onKeyUp: function (e) {\r\n            var code = e.which;\r\n            this._unRegisterKey(code);\r\n        },\r\n\r\n        _onHotKey: function (e, hotKey) {\r\n            this._handleHotKey(hotKey);\r\n        },\r\n\r\n        _onMouseEnterCell: function (e) {\r\n            var $cell = $(e.target).closest('.datepicker--cell'),\r\n                date = this._getDateFromCell($cell);\r\n\r\n            // Prevent from unnecessary rendering and setting new currentDate\r\n            this.silent = true;\r\n\r\n            if (this.focused) {\r\n                this.focused = ''\r\n            }\r\n\r\n            $cell.addClass('-focus-');\r\n\r\n            this.focused = date;\r\n            this.silent = false;\r\n\r\n            if (this.opts.range && this.selectedDates.length == 1) {\r\n                this.minRange = this.selectedDates[0];\r\n                this.maxRange = '';\r\n                if (datepicker.less(this.minRange, this.focused)) {\r\n                    this.maxRange = this.minRange;\r\n                    this.minRange = '';\r\n                }\r\n                this.views[this.currentView]._update();\r\n            }\r\n        },\r\n\r\n        _onMouseLeaveCell: function (e) {\r\n            var $cell = $(e.target).closest('.datepicker--cell');\r\n\r\n            $cell.removeClass('-focus-');\r\n\r\n            this.silent = true;\r\n            this.focused = '';\r\n            this.silent = false;\r\n        },\r\n\r\n        _onTimeChange: function (e, h, m) {\r\n            var date = new Date(),\r\n                selectedDates = this.selectedDates,\r\n                selected = false;\r\n\r\n            if (selectedDates.length) {\r\n                selected = true;\r\n                date = this.lastSelectedDate;\r\n            }\r\n\r\n            date.setHours(h);\r\n            date.setMinutes(m);\r\n\r\n            if (!selected && !this._getCell(date).hasClass('-disabled-')) {\r\n                this.selectDate(date);\r\n            } else {\r\n                this._setInputValue();\r\n                if (this.opts.onSelect) {\r\n                    this._triggerOnChange();\r\n                }\r\n            }\r\n        },\r\n\r\n        _onClickCell: function (e, date) {\r\n            if (this.timepicker) {\r\n                date.setHours(this.timepicker.hours);\r\n                date.setMinutes(this.timepicker.minutes);\r\n            }\r\n            this.selectDate(date);\r\n        },\r\n\r\n        set focused(val) {\r\n            if (!val && this.focused) {\r\n                var $cell = this._getCell(this.focused);\r\n\r\n                if ($cell.length) {\r\n                    $cell.removeClass('-focus-')\r\n                }\r\n            }\r\n            this._focused = val;\r\n            if (this.opts.range && this.selectedDates.length == 1) {\r\n                this.minRange = this.selectedDates[0];\r\n                this.maxRange = '';\r\n                if (datepicker.less(this.minRange, this._focused)) {\r\n                    this.maxRange = this.minRange;\r\n                    this.minRange = '';\r\n                }\r\n            }\r\n            if (this.silent) return;\r\n            this.date = val;\r\n        },\r\n\r\n        get focused() {\r\n            return this._focused;\r\n        },\r\n\r\n        get parsedDate() {\r\n            return datepicker.getParsedDate(this.date);\r\n        },\r\n\r\n        set date (val) {\r\n            if (!(val instanceof Date)) return;\r\n\r\n            this.currentDate = val;\r\n\r\n            if (this.inited && !this.silent) {\r\n                this.views[this.view]._render();\r\n                this.nav._render();\r\n                if (this.visible && this.elIsInput) {\r\n                    this.setPosition();\r\n                }\r\n            }\r\n            return val;\r\n        },\r\n\r\n        get date () {\r\n            return this.currentDate\r\n        },\r\n\r\n        set view (val) {\r\n            this.viewIndex = this.viewIndexes.indexOf(val);\r\n\r\n            if (this.viewIndex < 0) {\r\n                return;\r\n            }\r\n\r\n            this.prevView = this.currentView;\r\n            this.currentView = val;\r\n\r\n            if (this.inited) {\r\n                if (!this.views[val]) {\r\n                    this.views[val] = new  $.fn.datepicker.Body(this, val, this.opts)\r\n                } else {\r\n                    this.views[val]._render();\r\n                }\r\n\r\n                this.views[this.prevView].hide();\r\n                this.views[val].show();\r\n                this.nav._render();\r\n\r\n                if (this.opts.onChangeView) {\r\n                    this.opts.onChangeView(val)\r\n                }\r\n                if (this.elIsInput && this.visible) this.setPosition();\r\n            }\r\n\r\n            return val\r\n        },\r\n\r\n        get view() {\r\n            return this.currentView;\r\n        },\r\n\r\n        get cellType() {\r\n            return this.view.substring(0, this.view.length - 1)\r\n        },\r\n\r\n        get minTime() {\r\n            var min = datepicker.getParsedDate(this.minDate);\r\n            return new Date(min.year, min.month, min.date).getTime()\r\n        },\r\n\r\n        get maxTime() {\r\n            var max = datepicker.getParsedDate(this.maxDate);\r\n            return new Date(max.year, max.month, max.date).getTime()\r\n        },\r\n\r\n        get curDecade() {\r\n            return datepicker.getDecade(this.date)\r\n        }\r\n    };\r\n\r\n    //  Utils\r\n    // -------------------------------------------------\r\n\r\n    datepicker.getDaysCount = function (date) {\r\n        return new Date(date.getFullYear(), date.getMonth() + 1, 0).getDate();\r\n    };\r\n\r\n    datepicker.getParsedDate = function (date) {\r\n        return {\r\n            year: date.getFullYear(),\r\n            month: date.getMonth(),\r\n            fullMonth: (date.getMonth() + 1) < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1, // One based\r\n            date: date.getDate(),\r\n            fullDate: date.getDate() < 10 ? '0' + date.getDate() : date.getDate(),\r\n            day: date.getDay(),\r\n            hours: date.getHours(),\r\n            fullHours:  date.getHours() < 10 ? '0' + date.getHours() :  date.getHours() ,\r\n            minutes: date.getMinutes(),\r\n            fullMinutes:  date.getMinutes() < 10 ? '0' + date.getMinutes() :  date.getMinutes()\r\n        }\r\n    };\r\n\r\n    datepicker.getDecade = function (date) {\r\n        var firstYear = Math.floor(date.getFullYear() / 10) * 10;\r\n\r\n        return [firstYear, firstYear + 9];\r\n    };\r\n\r\n    datepicker.template = function (str, data) {\r\n        return str.replace(/#\\{([\\w]+)\\}/g, function (source, match) {\r\n            if (data[match] || data[match] === 0) {\r\n                return data[match]\r\n            }\r\n        });\r\n    };\r\n\r\n    datepicker.isSame = function (date1, date2, type) {\r\n        if (!date1 || !date2) return false;\r\n        var d1 = datepicker.getParsedDate(date1),\r\n            d2 = datepicker.getParsedDate(date2),\r\n            _type = type ? type : 'day',\r\n\r\n            conditions = {\r\n                day: d1.date == d2.date && d1.month == d2.month && d1.year == d2.year,\r\n                month: d1.month == d2.month && d1.year == d2.year,\r\n                year: d1.year == d2.year\r\n            };\r\n\r\n        return conditions[_type];\r\n    };\r\n\r\n    datepicker.less = function (dateCompareTo, date, type) {\r\n        if (!dateCompareTo || !date) return false;\r\n        return date.getTime() < dateCompareTo.getTime();\r\n    };\r\n\r\n    datepicker.bigger = function (dateCompareTo, date, type) {\r\n        if (!dateCompareTo || !date) return false;\r\n        return date.getTime() > dateCompareTo.getTime();\r\n    };\r\n\r\n    datepicker.getLeadingZeroNum = function (num) {\r\n        return parseInt(num) < 10 ? '0' + num : num;\r\n    };\r\n\r\n    /**\r\n     * Returns copy of date with hours and minutes equals to 0\r\n     * @param date {Date}\r\n     */\r\n    datepicker.resetTime = function (date) {\r\n        if (typeof date != 'object') return;\r\n        date = datepicker.getParsedDate(date);\r\n        return new Date(date.year, date.month, date.date)\r\n    };\r\n\r\n    $.fn.datepicker = function ( options ) {\r\n        return this.each(function () {\r\n            if (!$.data(this, pluginName)) {\r\n                $.data(this,  pluginName,\r\n                    new Datepicker( this, options ));\r\n            } else {\r\n                var _this = $.data(this, pluginName);\r\n\r\n                _this.opts = $.extend(true, _this.opts, options);\r\n                _this.update();\r\n            }\r\n        });\r\n    };\r\n\r\n    $.fn.datepicker.Constructor = Datepicker;\r\n\r\n    $.fn.datepicker.language = {\r\n        ru: {\r\n            days: ['Воскресенье', 'Понедельник', 'Вторник', 'Среда', 'Четверг', 'Пятница', 'Суббота'],\r\n            daysShort: ['Вос','Пон','Вто','Сре','Чет','Пят','Суб'],\r\n            daysMin: ['Вс','Пн','Вт','Ср','Чт','Пт','Сб'],\r\n            months: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь'],\r\n            monthsShort: ['Янв', 'Фев', 'Мар', 'Апр', 'Май', 'Июн', 'Июл', 'Авг', 'Сен', 'Окт', 'Ноя', 'Дек'],\r\n            today: 'Сегодня',\r\n            clear: 'Очистить',\r\n            dateFormat: 'dd.mm.yyyy',\r\n            timeFormat: 'hh:ii',\r\n            firstDay: 1\r\n        }\r\n    };\r\n\r\n    $(function () {\r\n        $(autoInitSelector).datepicker();\r\n    })\r\n\r\n})();\r\n",";(function () {\r\n    var template = '' +\r\n        '<div class=\"datepicker--nav-action\" data-action=\"prev\">#{prevHtml}</div>' +\r\n        '<div class=\"datepicker--nav-title\">#{title}</div>' +\r\n        '<div class=\"datepicker--nav-action\" data-action=\"next\">#{nextHtml}</div>',\r\n        buttonsContainerTemplate = '<div class=\"datepicker--buttons\"></div>',\r\n        button = '<span class=\"datepicker--button\" data-action=\"#{action}\">#{label}</span>',\r\n        datepicker = $.fn.datepicker,\r\n        dp = datepicker.Constructor;\r\n\r\n    datepicker.Navigation = function (d, opts) {\r\n        this.d = d;\r\n        this.opts = opts;\r\n\r\n        this.$buttonsContainer = '';\r\n\r\n        this.init();\r\n    };\r\n\r\n    datepicker.Navigation.prototype = {\r\n        init: function () {\r\n            this._buildBaseHtml();\r\n            this._bindEvents();\r\n        },\r\n\r\n        _bindEvents: function () {\r\n            this.d.$nav.on('click', '.datepicker--nav-action', $.proxy(this._onClickNavButton, this));\r\n            this.d.$nav.on('click', '.datepicker--nav-title', $.proxy(this._onClickNavTitle, this));\r\n            this.d.$datepicker.on('click', '.datepicker--button', $.proxy(this._onClickNavButton, this));\r\n        },\r\n\r\n        _buildBaseHtml: function () {\r\n            if (!this.opts.onlyTimepicker) {\r\n                this._render();\r\n            }\r\n            this._addButtonsIfNeed();\r\n        },\r\n\r\n        _addButtonsIfNeed: function () {\r\n            if (this.opts.todayButton) {\r\n                this._addButton('today')\r\n            }\r\n            if (this.opts.clearButton) {\r\n                this._addButton('clear')\r\n            }\r\n        },\r\n\r\n        _render: function () {\r\n            var title = this._getTitle(this.d.currentDate),\r\n                html = dp.template(template, $.extend({title: title}, this.opts));\r\n            this.d.$nav.html(html);\r\n            if (this.d.view == 'years') {\r\n                $('.datepicker--nav-title', this.d.$nav).addClass('-disabled-');\r\n            }\r\n            this.setNavStatus();\r\n        },\r\n\r\n        _getTitle: function (date) {\r\n            return this.d.formatDate(this.opts.navTitles[this.d.view], date)\r\n        },\r\n\r\n        _addButton: function (type) {\r\n            if (!this.$buttonsContainer.length) {\r\n                this._addButtonsContainer();\r\n            }\r\n\r\n            var data = {\r\n                    action: type,\r\n                    label: this.d.loc[type]\r\n                },\r\n                html = dp.template(button, data);\r\n\r\n            if ($('[data-action=' + type + ']', this.$buttonsContainer).length) return;\r\n            this.$buttonsContainer.append(html);\r\n        },\r\n\r\n        _addButtonsContainer: function () {\r\n            this.d.$datepicker.append(buttonsContainerTemplate);\r\n            this.$buttonsContainer = $('.datepicker--buttons', this.d.$datepicker);\r\n        },\r\n\r\n        setNavStatus: function () {\r\n            if (!(this.opts.minDate || this.opts.maxDate) || !this.opts.disableNavWhenOutOfRange) return;\r\n\r\n            var date = this.d.parsedDate,\r\n                m = date.month,\r\n                y = date.year,\r\n                d = date.date;\r\n\r\n            switch (this.d.view) {\r\n                case 'days':\r\n                    if (!this.d._isInRange(new Date(y, m-1, 1), 'month')) {\r\n                        this._disableNav('prev')\r\n                    }\r\n                    if (!this.d._isInRange(new Date(y, m+1, 1), 'month')) {\r\n                        this._disableNav('next')\r\n                    }\r\n                    break;\r\n                case 'months':\r\n                    if (!this.d._isInRange(new Date(y-1, m, d), 'year')) {\r\n                        this._disableNav('prev')\r\n                    }\r\n                    if (!this.d._isInRange(new Date(y+1, m, d), 'year')) {\r\n                        this._disableNav('next')\r\n                    }\r\n                    break;\r\n                case 'years':\r\n                    var decade = dp.getDecade(this.d.date);\r\n                    if (!this.d._isInRange(new Date(decade[0] - 1, 0, 1), 'year')) {\r\n                        this._disableNav('prev')\r\n                    }\r\n                    if (!this.d._isInRange(new Date(decade[1] + 1, 0, 1), 'year')) {\r\n                        this._disableNav('next')\r\n                    }\r\n                    break;\r\n            }\r\n        },\r\n\r\n        _disableNav: function (nav) {\r\n            $('[data-action=\"' + nav + '\"]', this.d.$nav).addClass('-disabled-')\r\n        },\r\n\r\n        _activateNav: function (nav) {\r\n            $('[data-action=\"' + nav + '\"]', this.d.$nav).removeClass('-disabled-')\r\n        },\r\n\r\n        _onClickNavButton: function (e) {\r\n            var $el = $(e.target).closest('[data-action]'),\r\n                action = $el.data('action');\r\n\r\n            this.d[action]();\r\n        },\r\n\r\n        _onClickNavTitle: function (e) {\r\n            if ($(e.target).hasClass('-disabled-')) return;\r\n\r\n            if (this.d.view == 'days') {\r\n                return this.d.view = 'months'\r\n            }\r\n\r\n            this.d.view = 'years';\r\n        }\r\n    }\r\n\r\n})();\r\n",";(function () {\r\n    var template = '<div class=\"datepicker--time\">' +\r\n        '<div class=\"datepicker--time-current\">' +\r\n        '   <span class=\"datepicker--time-current-hours\">#{hourVisible}</span>' +\r\n        '   <span class=\"datepicker--time-current-colon\">:</span>' +\r\n        '   <span class=\"datepicker--time-current-minutes\">#{minValue}</span>' +\r\n        '</div>' +\r\n        '<div class=\"datepicker--time-sliders\">' +\r\n        '   <div class=\"datepicker--time-row\">' +\r\n        '      <input type=\"range\" name=\"hours\" value=\"#{hourValue}\" min=\"#{hourMin}\" max=\"#{hourMax}\" step=\"#{hourStep}\"/>' +\r\n        '   </div>' +\r\n        '   <div class=\"datepicker--time-row\">' +\r\n        '      <input type=\"range\" name=\"minutes\" value=\"#{minValue}\" min=\"#{minMin}\" max=\"#{minMax}\" step=\"#{minStep}\"/>' +\r\n        '   </div>' +\r\n        '</div>' +\r\n        '</div>',\r\n        datepicker = $.fn.datepicker,\r\n        dp = datepicker.Constructor;\r\n\r\n    datepicker.Timepicker = function (inst, opts) {\r\n        this.d = inst;\r\n        this.opts = opts;\r\n\r\n        this.init();\r\n    };\r\n\r\n    datepicker.Timepicker.prototype = {\r\n        init: function () {\r\n            var input = 'input';\r\n            this._setTime(this.d.date);\r\n            this._buildHTML();\r\n\r\n            if (navigator.userAgent.match(/trident/gi)) {\r\n                input = 'change';\r\n            }\r\n\r\n            this.d.$el.on('selectDate', this._onSelectDate.bind(this));\r\n            this.$ranges.on(input, this._onChangeRange.bind(this));\r\n            this.$ranges.on('mouseup', this._onMouseUpRange.bind(this));\r\n            this.$ranges.on('mousemove focus ', this._onMouseEnterRange.bind(this));\r\n            this.$ranges.on('mouseout blur', this._onMouseOutRange.bind(this));\r\n        },\r\n\r\n        _setTime: function (date) {\r\n            var _date = dp.getParsedDate(date);\r\n\r\n            this._handleDate(date);\r\n            this.hours = _date.hours < this.minHours ? this.minHours : _date.hours;\r\n            this.minutes = _date.minutes < this.minMinutes ? this.minMinutes : _date.minutes;\r\n        },\r\n\r\n        /**\r\n         * Sets minHours and minMinutes from date (usually it's a minDate)\r\n         * Also changes minMinutes if current hours are bigger then @date hours\r\n         * @param date {Date}\r\n         * @private\r\n         */\r\n        _setMinTimeFromDate: function (date) {\r\n            this.minHours = date.getHours();\r\n            this.minMinutes = date.getMinutes();\r\n\r\n            // If, for example, min hours are 10, and current hours are 12,\r\n            // update minMinutes to default value, to be able to choose whole range of values\r\n            if (this.d.lastSelectedDate) {\r\n                if (this.d.lastSelectedDate.getHours() > date.getHours()) {\r\n                    this.minMinutes = this.opts.minMinutes;\r\n                }\r\n            }\r\n        },\r\n\r\n        _setMaxTimeFromDate: function (date) {\r\n            this.maxHours = date.getHours();\r\n            this.maxMinutes = date.getMinutes();\r\n\r\n            if (this.d.lastSelectedDate) {\r\n                if (this.d.lastSelectedDate.getHours() < date.getHours()) {\r\n                    this.maxMinutes = this.opts.maxMinutes;\r\n                }\r\n            }\r\n        },\r\n\r\n        _setDefaultMinMaxTime: function () {\r\n            var maxHours = 23,\r\n                maxMinutes = 59,\r\n                opts = this.opts;\r\n\r\n            this.minHours = opts.minHours < 0 || opts.minHours > maxHours ? 0 : opts.minHours;\r\n            this.minMinutes = opts.minMinutes < 0 || opts.minMinutes > maxMinutes ? 0 : opts.minMinutes;\r\n            this.maxHours = opts.maxHours < 0 || opts.maxHours > maxHours ? maxHours : opts.maxHours;\r\n            this.maxMinutes = opts.maxMinutes < 0 || opts.maxMinutes > maxMinutes ? maxMinutes : opts.maxMinutes;\r\n        },\r\n\r\n        /**\r\n         * Looks for min/max hours/minutes and if current values\r\n         * are out of range sets valid values.\r\n         * @private\r\n         */\r\n        _validateHoursMinutes: function (date) {\r\n            if (this.hours < this.minHours) {\r\n                this.hours = this.minHours;\r\n            } else if (this.hours > this.maxHours) {\r\n                this.hours = this.maxHours;\r\n            }\r\n\r\n            if (this.minutes < this.minMinutes) {\r\n                this.minutes = this.minMinutes;\r\n            } else if (this.minutes > this.maxMinutes) {\r\n                this.minutes = this.maxMinutes;\r\n            }\r\n        },\r\n\r\n        _buildHTML: function () {\r\n            var lz = dp.getLeadingZeroNum,\r\n                data = {\r\n                    hourMin: this.minHours,\r\n                    hourMax: lz(this.maxHours),\r\n                    hourStep: this.opts.hoursStep,\r\n                    hourValue: this.hours,\r\n                    hourVisible: lz(this.displayHours),\r\n                    minMin: this.minMinutes,\r\n                    minMax: lz(this.maxMinutes),\r\n                    minStep: this.opts.minutesStep,\r\n                    minValue: lz(this.minutes)\r\n                },\r\n                _template = dp.template(template, data);\r\n\r\n            this.$timepicker = $(_template).appendTo(this.d.$datepicker);\r\n            this.$ranges = $('[type=\"range\"]', this.$timepicker);\r\n            this.$hours = $('[name=\"hours\"]', this.$timepicker);\r\n            this.$minutes = $('[name=\"minutes\"]', this.$timepicker);\r\n            this.$hoursText = $('.datepicker--time-current-hours', this.$timepicker);\r\n            this.$minutesText = $('.datepicker--time-current-minutes', this.$timepicker);\r\n\r\n            if (this.d.ampm) {\r\n                this.$ampm = $('<span class=\"datepicker--time-current-ampm\">')\r\n                    .appendTo($('.datepicker--time-current', this.$timepicker))\r\n                    .html(this.dayPeriod);\r\n\r\n                this.$timepicker.addClass('-am-pm-');\r\n            }\r\n        },\r\n\r\n        _updateCurrentTime: function () {\r\n            var h =  dp.getLeadingZeroNum(this.displayHours),\r\n                m = dp.getLeadingZeroNum(this.minutes);\r\n\r\n            this.$hoursText.html(h);\r\n            this.$minutesText.html(m);\r\n\r\n            if (this.d.ampm) {\r\n                this.$ampm.html(this.dayPeriod);\r\n            }\r\n        },\r\n\r\n        _updateRanges: function () {\r\n            this.$hours.attr({\r\n                min: this.minHours,\r\n                max: this.maxHours\r\n            }).val(this.hours);\r\n\r\n            this.$minutes.attr({\r\n                min: this.minMinutes,\r\n                max: this.maxMinutes\r\n            }).val(this.minutes)\r\n        },\r\n\r\n        /**\r\n         * Sets minHours, minMinutes etc. from date. If date is not passed, than sets\r\n         * values from options\r\n         * @param [date] {object} - Date object, to get values from\r\n         * @private\r\n         */\r\n        _handleDate: function (date) {\r\n            this._setDefaultMinMaxTime();\r\n            if (date) {\r\n                if (dp.isSame(date, this.d.opts.minDate)) {\r\n                    this._setMinTimeFromDate(this.d.opts.minDate);\r\n                } else if (dp.isSame(date, this.d.opts.maxDate)) {\r\n                    this._setMaxTimeFromDate(this.d.opts.maxDate);\r\n                }\r\n            }\r\n\r\n            this._validateHoursMinutes(date);\r\n        },\r\n\r\n        update: function () {\r\n            this._updateRanges();\r\n            this._updateCurrentTime();\r\n        },\r\n\r\n        /**\r\n         * Calculates valid hour value to display in text input and datepicker's body.\r\n         * @param date {Date|Number} - date or hours\r\n         * @param [ampm] {Boolean} - 12 hours mode\r\n         * @returns {{hours: *, dayPeriod: string}}\r\n         * @private\r\n         */\r\n        _getValidHoursFromDate: function (date, ampm) {\r\n            var d = date,\r\n                hours = date;\r\n\r\n            if (date instanceof Date) {\r\n                d = dp.getParsedDate(date);\r\n                hours = d.hours;\r\n            }\r\n\r\n            var _ampm = ampm || this.d.ampm,\r\n                dayPeriod = 'am';\r\n\r\n            if (_ampm) {\r\n                switch(true) {\r\n                    case hours == 0:\r\n                        hours = 12;\r\n                        break;\r\n                    case hours == 12:\r\n                        dayPeriod = 'pm';\r\n                        break;\r\n                    case hours > 11:\r\n                        hours = hours - 12;\r\n                        dayPeriod = 'pm';\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            }\r\n\r\n            return {\r\n                hours: hours,\r\n                dayPeriod: dayPeriod\r\n            }\r\n        },\r\n\r\n        set hours (val) {\r\n            this._hours = val;\r\n\r\n            var displayHours = this._getValidHoursFromDate(val);\r\n\r\n            this.displayHours = displayHours.hours;\r\n            this.dayPeriod = displayHours.dayPeriod;\r\n        },\r\n\r\n        get hours() {\r\n            return this._hours;\r\n        },\r\n\r\n        //  Events\r\n        // -------------------------------------------------\r\n\r\n        _onChangeRange: function (e) {\r\n            var $target = $(e.target),\r\n                name = $target.attr('name');\r\n            \r\n            this.d.timepickerIsActive = true;\r\n\r\n            this[name] = $target.val();\r\n            this._updateCurrentTime();\r\n            this.d._trigger('timeChange', [this.hours, this.minutes]);\r\n\r\n            this._handleDate(this.d.lastSelectedDate);\r\n            this.update()\r\n        },\r\n\r\n        _onSelectDate: function (e, data) {\r\n            this._handleDate(data);\r\n            this.update();\r\n        },\r\n\r\n        _onMouseEnterRange: function (e) {\r\n            var name = $(e.target).attr('name');\r\n            $('.datepicker--time-current-' + name, this.$timepicker).addClass('-focus-');\r\n        },\r\n\r\n        _onMouseOutRange: function (e) {\r\n            var name = $(e.target).attr('name');\r\n            if (this.d.inFocus) return; // Prevent removing focus when mouse out of range slider\r\n            $('.datepicker--time-current-' + name, this.$timepicker).removeClass('-focus-');\r\n        },\r\n\r\n        _onMouseUpRange: function (e) {\r\n            this.d.timepickerIsActive = false;\r\n        }\r\n    };\r\n})();\r\n"],"names":["templates","datepicker","dp","days","months","years","$","fn","Constructor","Body","d","type","opts","this","$el","onlyTimepicker","init","prototype","_buildBaseHtml","_render","_bindEvents","on","proxy","_onClickCell","appendTo","$content","$names","$cells","_getDayNamesHtml","firstDay","curDay","html","i","undefined","isWeekend","loc","daysMin","_getCellContents","date","classes","currentDate","Date","parent","minRange","resetTime","maxRange","getParsedDate","render","day","month","parsedDate","selectOtherMonths","showOtherMonths","monthsField","decade","curDecade","year","selectOtherYears","showOtherYears","onRenderCell","range","isSame","selectedDates","length","focused","bigger","less","_isSelected","_isInRange","disabled","_getDaysHtml","m","y","totalMonthDays","getDaysCount","firstMonthDay","getFullYear","getMonth","getDay","lastMonthDay","daysFromPevMonth","daysFromNextMonth","max","_getDayHtml","content","getDate","_getMonthsHtml","_getMonthHtml","_getYearsHtml","getDecade","_getYearHtml","_renderTypes","dayNames","bind","_update","$cell","_this","each","cell","_getDateFromCell","cellType","attr","show","addClass","acitve","hide","removeClass","active","_handleClick","el","data","view","minView","selectedDate","alreadySelected","_handleAlreadySelectedDates","_trigger","down","e","target","closest","hasClass","$body","$datepickersContainer","pluginName","containerBuilt","defaults","hotKeys","Datepicker","inline","language","startDate","weekends","dateFormat","altField","altFieldDateFormat","toggleSelected","keyboardNav","position","offset","moveToOtherMonthsOnSelect","moveToOtherYearsOnSelect","minDate","maxDate","disableNavWhenOutOfRange","multipleDates","multipleDatesSeparator","todayButton","clearButton","showEvent","autoClose","prevHtml","nextHtml","navTitles","timepicker","dateTimeSeparator","timeFormat","minHours","maxHours","minMinutes","maxMinutes","hoursStep","minutesStep","onSelect","onShow","onHide","onChangeMonth","onChangeYear","onChangeDecade","onChangeView","options","extend","nodeName","elIsInput","$altField","inited","visible","silent","currentView","_createShortCuts","views","keys","_prevOnSelectValue","VERSION","viewIndexes","_buildDatepickersContainer","_defineLocale","_syncWithMinMaxDates","_setPositionClasses","_bindKeyboardEvents","$datepicker","_onMouseDownDatepicker","_onMouseUpDatepicker","Timepicker","_bindTimepickerEvents","nav","Navigation","_onMouseEnterCell","_onMouseLeaveCell","_onShowEvent","_onMouseUpEl","_onBlur","_onKeyUpGeneral","window","_onResize","_onMouseUpBody","_onKeyDown","_onKeyUp","_onHotKey","_onTimeChange","indexOf","lang","console","warn","ru","join","boundary","_getWordBoundaryRegExp","match","ampm","append","$appendTarget","$inline","insertAfter","$nav","_triggerOnChange","formattedDates","parsedSelected","dates","hours","minutes","map","formatDate","next","o","prev","string","validHours","result","locale","leadingZero","getLeadingZeroNum","fullHours","dayPeriod","replacer","_replacer","_getValidHoursFromDate","test","replace","getTime","toUpperCase","fullDate","daysShort","fullMonth","monthsShort","fullMinutes","toString","slice","str","reg","p1","p2","p3","sign","symbols","RegExp","selectDate","len","newDate","Array","isArray","forEach","lastSelectedDate","_setTime","setHours","setMinutes","push","_setInputValue","timepickerIsActive","removeDate","selected","some","curDate","splice","today","clear","update","param","value","arguments","_addButtonsIfNeed","setPosition","_handleDate","_updateRanges","_updateCurrentTime","curTime","minTime","maxTime","checkDate","res","altValues","format","altFormat","val","time","min","dMinTime","dMaxTime","types","_getDimensions","width","outerWidth","height","outerHeight","left","top","pos","main","split","removeAttr","dims","selfDims","secondary","css","_bindVisionEvents","inFocus","blur","_changeView","up","event","off","one","dir","nextView","viewIndex","_handleHotKey","key","focusedParsed","totalDaysInNextMonth","_getFocusedDate","monthChanged","yearChanged","decadeChanged","_registerKey","curKey","_unRegisterKey","index","_isHotKeyPressed","currentHotKey","found","pressedKeys","sort","hotKey","every","args","trigger","_focusNextCell","keyCode","nd","_getCell","selector","find","destroy","remove","originalEvent","timepickerFocus","focus","setTimeout","code","which","preventDefault","h","_focused","prevView","substring","getHours","getMinutes","firstYear","Math","floor","template","source","date1","date2","d1","d2","_type","dateCompareTo","num","parseInt","$buttonsContainer","_onClickNavButton","_onClickNavTitle","_addButton","title","_getTitle","setNavStatus","_addButtonsContainer","action","label","_disableNav","_activateNav","inst","input","_buildHTML","navigator","userAgent","_onSelectDate","$ranges","_onChangeRange","_onMouseUpRange","_onMouseEnterRange","_onMouseOutRange","_date","_setMinTimeFromDate","_setMaxTimeFromDate","_setDefaultMinMaxTime","_validateHoursMinutes","lz","hourMin","hourMax","hourStep","hourValue","hourVisible","displayHours","minMin","minMax","minStep","minValue","_template","$timepicker","$hours","$minutes","$hoursText","$minutesText","$ampm","_hours","$target","name"],"sourceRoot":""}